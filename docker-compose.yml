version: '3.9'

services:
  redis:
    image: redis:alpine
    hostname: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - web

  celery-worker:
    build:
      context: ./Discord-Bot-WebUI
      dockerfile: Dockerfile.webui
    command: celery -A app.celery:celery worker --loglevel=info
    env_file:
      - .env
    volumes:
      - ./Discord-Bot-WebUI:/app
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - web

  celery-beat:
    build:
      context: ./Discord-Bot-WebUI
      dockerfile: Dockerfile.webui
    command: celery -A app.celery:celery beat --loglevel=info
    env_file:
      - .env
    volumes:
      - ./Discord-Bot-WebUI:/app
    depends_on:
      redis:
        condition: service_healthy
      celery-worker:
        condition: service_started
    networks:
      - web

  webui:
    build:
      context: ./Discord-Bot-WebUI
      dockerfile: Dockerfile.webui
    env_file:
      - .env
    volumes:
      - ./Discord-Bot-WebUI:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - ./predictions.db:/app/predictions.db
      - ./Discord-Bot-WebUI/service-account-key.json:/app/service-account-key.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webui.rule=Host(`portal.ecsfc.com`)"
      - "traefik.http.routers.webui.entrypoints=web"
      - "traefik.http.routers.webui-secure.entrypoints=websecure"
      - "traefik.http.routers.webui-secure.rule=Host(`portal.ecsfc.com`)"
      - "traefik.http.routers.webui-secure.tls=true"
      - "traefik.http.routers.webui-secure.tls.certresolver=myresolver"
    depends_on:
      redis:
        condition: service_healthy
      celery-worker:
        condition: service_started
      celery-beat:
        condition: service_started
    networks:
      - web

  flower:
    image: mher/flower
    command: celery --broker=redis://redis:6379/0 flower --port=5555
    environment:
      - FLOWER_UNAUTHENTICATED_API=true
    depends_on:
      redis:
        condition: service_healthy
      celery-worker:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flower.rule=Host(`flower.ecsfc.com`)"
      - "traefik.http.routers.flower.entrypoints=web"
      - "traefik.http.routers.flower-secure.entrypoints=websecure"
      - "traefik.http.routers.flower-secure.rule=Host(`flower.ecsfc.com`)"
      - "traefik.http.routers.flower-secure.tls=true"
      - "traefik.http.routers.flower-secure.tls.certresolver=myresolver"
    networks:
      - web

  discord-bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    command: python ECS_Discord_Bot.py
    networks:
      - web

networks:
  web:
    external: true